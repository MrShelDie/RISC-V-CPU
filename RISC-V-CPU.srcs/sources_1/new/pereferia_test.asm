# Инициализируем начальные значения регистров
li sp, 0x400					# Устанавливаем указатель на верхушку стека
lui gp, 0x80001					# Устанавливаем указатель на регистр, содержащий значение сегментника

li t0, 0x00000001				# Подготавливаем маску прерывания 0 входа
csrw mie, t0					# Загружаем маску в регистр маски
auipc t0, interrupt             # Загружаем адрес обработчика прерываний
addi t0, t0, 40
csrw mtvec, t0					# Устанавливаем вектор прерывания
li t0, 0x2FC					# Готовим адрес верхушки стека прерывания
csrw mscratch, t0				# Загружаем указатель на верхушку стека прерывания

li t0, 0						# Начальное значение глобальной переменной
sw t0, 0(gp)					# Загружаем переменную в память

li t1, 0						# Начальное значение, чтобы в симуляции не было xxx
li t2, 0						# Начальное значение, чтобы в симуляции не было xxx

while:							# Бесконечный цикл
	beq x0, x0, while
    
# Обработчик прерывания
interrupt:
	# Сохраняем используемые регистры на стек
	csrrw t0, mscratch, t0		# Меняем местами mscratch и t0
    sw t1, -4(t0)				# Сохраняем t1 на стек mscratch
    sw t2, -8(t0)				# Сохраняем t2 на стек mscratch

int0:
	# Обработчик 0-го прерывания
	lw t2, 0(gp)				# Загружаем переменную из памяти
    addi t2, t2, 1				# Прибавляем к значению 1
    sw t2, 0(gp)				# Возвращаем переменную в память
    
done:
	# Возвращаем регистры на свои места и выходим
    lw t1, -4(t0)				# Возвращаем t1 со стека
    lw t1, -8(t0)				# Возвращаем t2 со стека
    csrrw t0, mscratch, t0		# Меняем обратно местами t0 и mscratch
    mret						# Возвращаем управление программе (pc = mepc)